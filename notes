                //lesson1-add the first and second card and sum
// 1. Create two variables, firstCard and secondCard. 
// Set their values to a random number between 2-11
let firstCard = 7;
let secondCard = 3;
// 2. Create a variable, sum, and set it to the sum of the two cards
let sum = firstCard + secondCard;

                 //lesson2-if/else conditionals
let firstCard = 6
let secondCard = 9
let sum = firstCard + secondCard

if (sum <21) {
    console.log("Do you want to draw a new card?")
} else if (sum === 21){
    console.log("WooHoo! You got BLACKJACK!!")
} else (sum > 21) {
    console.log("You're out of the game!")
}

                 //lesson3-if/else statement
// Check if the person is old enough to enter the nightclub (21)
// Log a suitable message to the console in both cases

let age = 22

// if less than 21 -> "You can not enter the club!"
// else            -> "Welcome!"
if (age < 21) {
    console.log("You can not enter the club!")
} else {
    console.log("Welcome!")
}

                 //lesson4-if/else...if/else statement
// Check if the person is elegible for a birthday card from the King! (100)

let age = 100

// if less than 100    -> "Not elegible"
// else if exactly 100 -> "Here is your birthday card from the King!"
// else                -> "Not elegible, you have already gotten one"
if (age < 100) {
    console.log("Not elegible")
} else if (age === 100) {
    console.log("Here is your birthday card from the King!")
} else {
    console.log("Not elegible, you have already gotten one")
}

                 //lesson 5-if/else for the game
let firstCard = 10
let secondCard = 7
let sum = firstCard + secondCard
                 
// Write the conditional according to these rules:
                 
// if less than or equal to 20 -> "Do you want to draw a new card? ðŸ™‚"
// else if exactly 21 -> "Wohoo! You've got Blackjack! ðŸ¥³"
// else -> "You're out of the game! ðŸ˜­"
if (sum <= 20) {
    console.log("Do you want to draw a new card? ðŸ™‚")
} else if (sum === 21) {
    console.log("Wohoo! You've got Blackjack! ðŸ¥³")
} else {
    console.log("You're out of the game! ðŸ˜­")
}

                 //lesson 6- add the hasBlackJack variable
let firstCard = 10
let secondCard = 11
let sum = firstCard + secondCard
                 
if (sum <= 20) {
    console.log("Do you want to draw a new card? ðŸ™‚")
} else if (sum === 21) {
    console.log("Wohoo! You've got Blackjack! ðŸ¥³")
} else {
    console.log("You're out of the game! ðŸ˜­")
}
       // CASH OUT!
console.log(hasBlackJack)
  //place in variable area
let hasBlackJack = false
  //within 21 has black jack area of logic
hasBlackJack = true
  

//completed code
let firstCard = 10
let secondCard = 11
let sum = firstCard + secondCard
let hasBlackJack = false
                 
if (sum <= 20) {
    console.log("Do you want to draw a new card? ðŸ™‚")
} else if (sum === 21) {
    console.log("Wohoo! You've got Blackjack! ðŸ¥³")
    hasBlackJack = true
} else {
    console.log("You're out of the game! ðŸ˜­")
}
//cash out
console.log(hasBlackJack)

               //lesson 7 add the isAlive variable
let firstCard = 10
let secondCard = 11
let sum = firstCard + secondCard
let hasBlackJack = false
// 1. Create a variable called isAlive and assign it to true
let isAlive = true

// 2. Flip its value to false in the appropriate code block 
if (sum <= 20) {
    console.log("Do you want to draw a new card? ðŸ™‚")
} else if (sum === 21) {
    console.log("Wohoo! You've got Blackjack! ðŸ¥³")
    hasBlackJack = true
} else {
    console.log("You're out of the game! ðŸ˜­")
    isAlive = false
}

// 3. Log it out to check that you're doing it right
console.log(isAlive)

                 //lesson 8 prictise boolen conditions
console.log(4 === 3)  // false
console.log(5 > 2)    // true
console.log(12 > 12)  //false
console.log(3 < 0)    //false
console.log(3 >= 3)   // true
console.log(11 <= 11) //true
console.log(3 <= 2)   //false

// let firstCard = 10
// let secondCard = 11
// let sum = firstCard + secondCard
// let hasBlackJack = false
// let isAlive = true

// if (sum <= 20) {
//     console.log("Do you want to draw a new card? ðŸ™‚")
// } else if (sum === 21) {
//     console.log("Wohoo! You've got Blackjack! ðŸ¥³")
//     hasBlackJack = true
// } else {
//     console.log("You're out of the game! ðŸ˜­")
//     isAlive = false
// }

// console.log(isAlive)

            //lesson 9 add the message variable
let firstCard = 10
let secondCard = 11
let sum = firstCard + secondCard + 4
let hasBlackJack = false
let isAlive = true
// 1. Declare a variable called message and assign its value to an empty string
let message = ""
// 2. Reassign the message variable to the string we're logging out
if (sum <= 20) {
    message = "Do you want to draw a new card? ðŸ™‚"
} else if (sum === 21) {
    message = "Wohoo! You've got Blackjack! ðŸ¥³"
    hasBlackJack = true
} else {
    message = "You're out of the game! ðŸ˜­"
    isAlive = false
}

// 3. Log it out!
console.log(message)

                //lesson 10 link to stylesheet

                //lesson 11 add basic styling

                //lesson12 make the start button work
- add button to html 
eg  <button id="start-game-btn" onclick="startGame()">START GAME</button>
-create function startGame() and run function when clicked
eg function startGame(){
    (paste conditionals within curly braces of the function)
} 

                //lesson 13 showing message in browser
create variable for message/ Store the message-el paragraph in a variable called messageEl
        let messageEl = document.getElementById("message-el")
- display the message in the messageEl using messageEl.text content- this goes within the function at the botton
eg  messageEl.textContent = message;

                //lesson 14 display the sum of the cards
  <!-- 1. Give the sum paragraph and id of sum-el (html) -->
  eg <p id="sum-el">Sum:</p>

  2. Store the sum paragraph in a variable called sumEl
  eg. let sumEl = document.getElementById("sum-el")

  3. render sum on the page
            sumEl.textContent = "Sum: " + sum;

              //lesson 15 display the cards
              
<!-- 1. Give the cards paragraph and id of cards-el (html)-->
eg <p id="cards-el">Cards:</p>

// 2. Store the cards paragraph in a variable called cardsEl (js)
eg let cardsEl = document.getElementById("cards-el");

 // 3. Render the cars on the page using this format -> "Cards: 10 4" (js)
 cardsEl.textContent = "Cards: " + firstCard + " " + secondCard;

               //lesson 16 add new card button
 <!-- 1. Create a NEW CARD button, make it run newCard() on click (html/js)-->
eg <button onclick="newCard()">NEW CARD</button>
 // 2. Create a function newCard() that logs out "Drawing a new card from the deck!"
eg function newCard() {
        console.log("Drawing a new card from the deck!");
    }
 /* 3. Make sure that the two buttons have some space between
each other when they are rendered out vertically */ (css)
eg add margin-bottom to css eg margin: 2px


             //lesson 16 add to the sum when the new card is clicked
-within newCard function{
    // 1. Create a card variable, and hard code its value to a number (2-11)
    let card = 3;
    
    // 2. Add the new card to the sum variable
    sum = sum += card;
    // 3. Call startGame()
    startGame()
}

         //lesson 17 rename startGame function
- change to renderGame as not only starting a new game- just showing on screen
- create new startGame() function that calls renderGane()
eg function startGame() {
            renderGame()
        }

          //lesson 18 fix card issues with an array
issue not rendering 3rd card in Cards:
need to store all cards into 1 variable
-create an array
    let cards = [firstCard, secondCard]
- edit cardsEl.textContent to:
     cardsEl.textContent = "cards: " + cards[0] + " " + cards[1]
- above uses array indexing 

      //lesson 19 Aside- arrays intro
// Arrays - ordered lists of items

let featuredPosts = [
    "Check out my Netflix clone",
    "Here's the code for my project",
    "I've just relaunched my portfolio"
]

// Create an array that lists your i.e. experience, education, licenses, skills or similar
// The items of the array should be strings
let education = [
   "GCSE'a all A-c",
   "A Levels",
   "Degree in English",
   "PGCE and QTS"
   "Level 5 Diploma Full Stack Web Development"
]

       //lesson 20 Array indexes
// Arrays - ordered lists of items
- arrays 0 index so 1st item has index of 0
let featuredPosts = [
    "Check out my Netflix clone",
    "Here's the code for my project",
    "I've just relaunched my portfolio"
]


let experience = ["CEO at Scrimba", "Frontend developer at Xeneta", "People counter for Norstat"]

// Make the following appear in the console:
// Frontend developer at Xeneta
// People counter for Norstat
// CEO at Scrimba
console.log(experience[1])
console.log(experience[2])
console.log(experience[0]);

   //length and index are different
let featuredPosts = [
    "Check out my Netflix clone",
    "Here's the code for my project",
    "I've just relaunched my portfolio"
]
console.log(featuredPosts.length)// 3


      //Lesson 21 Arrays with multiple data types
// Array - ordered list of items - composite / complex data type
let dataTypes = [
    "strings",
    45,
    False
]
// Create an array that describes yourself. Use the three primitive data types you've learned
// It should contain your name (string), your age (number), and whether you like pizza (boolean)
let MyInfo = [
    "Alex",
    39,
    True
]

                 //Lesson 22 array.push(), Array.pop()
 - push() and pop() are METHODS
 -PUSH - pushes things into the array     
      eg cards.push() 
-what you're pushing in goes in the parentheses 
let cards = [7, 4]
cards.push(6)
//console.log(cards)
returns  [7, 4, 6]

// Push the newMessage to the messages array, and then log out the array

let messages = [
    "Hey, how's it going?",        
    "I'm great, thank you! How about you?",
    "All good. Been working on my portfolio lately."
]

let newMessage = "Same here!"
messages.push(newMessage);
console.log(messages)
//returns all of the messages

--POP removes and item from an array

messages.pop()
console.log(messages)
//removes the last of the messages from the array

          //lesson 23 creating the cards array
// 1. Create a new array - cards - that contains firstCard and secondCard
eg let cards = [firstCard, secondCard];
// 2. Refer to the cards array when rendering out the cards (within renderGame function)
eg cardsEl.textContent = "Cards: " + cards[0] + " " + cards[1];


            //lesson 24 push a new card into an array
// Push the card to the cards array (within newCard function)
 eg cards.push(card);


            //lesson 25 counting in JavaScript
// Count to ten!

// We need to specify...

// 1.Where should we START counting?
// 2.Where is the FINISH line?
// 3.What's the STEP SIZE we should use?

//    1.START           2.FINISH     3.STEP SIZE
for ( let count = 1;  count < 11;  count += 1 )  {
    
    console.log(count)

}
-start with for as counting is an example of a loop

//count from 1- 20
for ( let count = 1;  count < 21;  count += 1 )  {
    
    console.log(count)

}
//count from 10- 20
for ( let count = 10;  count < 21;  count += 1 )  {
    
    console.log(count)

}
//count from 10- 20 in 2s
for ( let count = 10;  count < 21;  count += 2 )  {
    
    console.log(count)

}

        //lesson 26 write 1st loop
//create loop counting 0-5
- convention- use i instad of count
for (let i = 0; i < 6; i +=1) {
    console.log(i)
}

// Create a for loop that counts from 10 to 100 in steps of 10
// Use console.log to log out the numbers
for (let i = 10; i < 101; i +=10) {
    console.log(i)
}


           //lesson 27 for loops and arrays
let messages = [
    "Hey, how's it going?",        
    "I'm great, thank you! How about you?",
    "All good. Been working on my portfolio lately.",
    "Same here!",
    "Great to hear"
]
//bad way- too much repetition
// console.log(messages[0])
// console.log(messages[1])
// console.log(messages[2])
// console.log(messages[3])

// DRY - Don't repeat yourself- combine array with a for loop
for (let i = 0; i < 5; i += 1) {
    console.log(messages[i]) //i becomes index as loops through
}// but not dynamic- does not take into account changes to the array

//use .length - .length refers to the actual length of the array
for (let i = 0; i < messages.length; i += 1) {
    console.log(messages[i])
}


           //lesson 28 write array based for loop
let cards = [7, 3, 9]

// Create a for loop that logs out all the cards in the array
// Use cards.length to specify how long the loop should run
for (let i = 0; i < cards.length; i ++) {
    console.log(cards[i])
}

         //lesson 29 for loops, arrays and the DOM
let sentence = ["Hello ", "my ", "name ", "is ", "Per"] 
let greetingEl = document.getElementById("greeting-el")

// Render the sentence in the greetingEl paragraph using a for loop and .textContent
for (let i = 0; i < sentence.length; i ++) {
   greetingEl.textContent += (sentence[i])
}
// =+ keeps previous content from the loop so displays alltogether

//keep spaces is no spaces in arrays?
for (let i = 0; i < sentence.length; i ++) {
   greetingEl.textContent += (sentence[i] + " ")
}


               //Lesson 30 use a loop to render cards
 // Create a for loop that renders out all the cards instead of just two
 for (let 1 = 0: i < cards.length; i++ ) {
    cardsEl.textContent += cards[i] + " "
 }


               //lesson 31 avoiding hard coding 
// Create a function, getRandomCard(), that always returns the number 5
function getRandomCard()

               //lesson 32 returning values in functions
let player1Time = 102
let player2Time = 107

// select multiple of same cmd+d - ctrl+d
function getFastestRaceTime() {
    if (player1Time < player2Time) {
        return player1Time
    } else if (player2Time < player1Time) {
        return player2Time
    } else {
        return player1Time
    }
}
let fastestRace = getFastestRaceTime()
console.log(fastestRace) //returns 102

// Write a function that returns the total race time
// Call/invoke the function and store the returned value in a new variable
// Finally, log the variable out
function getTotalRaceTime(){
    return player1Time + player2Time
}
let totalRaceTime = getTotalRaceTime
console.log(totalTime)